{"version":3,"sources":["assets/fcuk-random-button.png","assets/fcuk-title.png","assets/fcuk-arrow-left.png","assets/fcuk-arrow-right.png","assets/body-one-test.png","assets/body-two-test.png","assets/head-one-test.png","assets/head-two-test.png","assets/legs-one-test.png","assets/legs-two-test.png","assets/images.js","styles.tsx","components/Arrow.tsx","components/BodyRow.tsx","components/Button.tsx","components/HeadRow.tsx","components/LegsRow.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["headImages","HeadOne","HeadTwo","bodyImages","BodyOne","BodyTwo","legsImages","LegsOne","LegsTwo","Container","styled","div","Wrapper","TitleImage","img","ArrowImage","props","mouseDown","ArrowButton","button","column","row","RandomButtonImage","RandomButton","HeadImage","shouldDisplay","BodyImage","LegsImage","Arrow","src","altText","onClick","useState","setMouseDown","onMouseDown","onMouseUp","onKeyDown","onKeyUp","alt","BodyRow","bodyCount","setBodyCount","LeftArrow","length","map","index","RightArrow","Button","mouseDownOnButton","setMouseDownOnButton","HeadRow","headCount","setHeadCount","LegsRow","legsCount","setLegsCount","App","Title","Random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5753075c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/fcuk-random-button.480a83be.png\";","export default __webpack_public_path__ + \"static/media/fcuk-title.56dae743.png\";","export default __webpack_public_path__ + \"static/media/fcuk-arrow-left.a709e9df.png\";","export default __webpack_public_path__ + \"static/media/fcuk-arrow-right.3bad8883.png\";","export default __webpack_public_path__ + \"static/media/body-one-test.ed9e9c90.png\";","export default __webpack_public_path__ + \"static/media/body-two-test.e3d61626.png\";","export default __webpack_public_path__ + \"static/media/head-one-test.213b9123.png\";","export default __webpack_public_path__ + \"static/media/head-two-test.4f6f5009.png\";","export default __webpack_public_path__ + \"static/media/legs-one-test.e0b7399a.png\";","export default __webpack_public_path__ + \"static/media/legs-two-test.d1426543.png\";","import BodyOne from './body-one-test.png';\nimport BodyTwo from './body-two-test.png';\nimport HeadOne from './head-one-test.png';\nimport HeadTwo from './head-two-test.png';\nimport LegsOne from './legs-one-test.png';\nimport LegsTwo from './legs-two-test.png';\n\nexport const headImages = [HeadOne, HeadTwo];\nexport const bodyImages = [BodyOne, BodyTwo];\nexport const legsImages = [LegsOne, LegsTwo];\n","import styled from 'styled-components/macro';\n\nexport const Container = styled.div`\n  display: flex;\n  max-width: 1000px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 0.7fr 1.6fr 0.7fr 1fr;\n  grid-template-rows: 1.2fr 0.9fr 0.9fr 0.9fr 1.1fr;\n  justify-content: center;\n  align-content: center;\n  justify-items: center;\n  align-items: center;\n`;\n\nexport const TitleImage = styled.img`\n  width: 100%;\n  grid-column: 3;\n`;\n\nexport const ArrowImage = styled.img<{\n  readonly mouseDown: boolean;\n}>`\n  width: ${(props) => (props.mouseDown ? '97%' : '100%')};\n  cursor: pointer;\n`;\n\nexport const ArrowButton = styled.button<{\n  readonly column: number;\n  readonly row: number;\n}>`\n  grid-column: ${(props) => props.column};\n  grid-row: ${(props) => props.row};\n  width: 70%;\n  background-color: white;\n  padding: 0;\n  border: none;\n  display: flex;\n  align-items: center;\n`;\n\nexport const RandomButtonImage = styled.img<{ readonly mouseDown: boolean }>`\n  width: ${(props) => (props.mouseDown ? '97%' : '100%')};\n  cursor: pointer;\n`;\n\nexport const RandomButton = styled.button`\n  width: 60%;\n  background-color: white;\n  grid-column: 3;\n  grid-row: 5;\n  border: none;\n  border-radius: 300px;\n  padding: 0;\n`;\n\nexport const HeadImage = styled.img<{ readonly shouldDisplay: boolean }>`\n  width: 100%;\n  grid-column: 3;\n  grid-row: 2;\n  visibility: ${(props) => (props.shouldDisplay ? 'visible' : 'hidden')};\n  padding: 5% 5% 0px 5%;\n`;\n\nexport const BodyImage = styled.img<{ readonly shouldDisplay: boolean }>`\n  width: 100%;\n  grid-column: 3;\n  grid-row: 3;\n  visibility: ${(props) => (props.shouldDisplay ? 'visible' : 'hidden')};\n  padding: 0px 5% 0px 5%;\n`;\n\nexport const LegsImage = styled.img<{ readonly shouldDisplay: boolean }>`\n  width: 100%;\n  grid-column: 3;\n  grid-row: 4;\n  visibility: ${(props) => (props.shouldDisplay ? 'visible' : 'hidden')};\n  padding: 0px 5% 5% 5%;\n`;\n\nexport const AspectRatioBox = styled.div`\n  height: 0;\n  overflow: hidden;\n  padding-top: calc(1 / 1 * 100%);\n  background: white;\n  position: relative;\n`;\n\nexport const AspectRatioBoxInside = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n","import { useState } from 'react';\nimport { ArrowButton, ArrowImage } from '../styles';\n\nconst Arrow = ({\n  src,\n  altText,\n  row,\n  column,\n  onClick,\n}: {\n  readonly src: any;\n  readonly altText: string;\n  readonly row: number;\n  readonly column: number;\n  readonly onClick: any;\n}) => {\n  const [mouseDown, setMouseDown] = useState<boolean>(false);\n  const onMouseDown = () => {\n    setMouseDown(true);\n  };\n  const onMouseUp = () => {\n    setMouseDown(false);\n  };\n  return (\n    <ArrowButton\n      onKeyDown={onMouseDown}\n      onKeyUp={onMouseUp}\n      onClick={onClick}\n      row={row}\n      column={column}\n      onMouseDown={onMouseDown}\n      onMouseUp={onMouseUp}\n    >\n      <ArrowImage mouseDown={mouseDown} src={src} alt={altText} />\n    </ArrowButton>\n  );\n};\n\nexport default Arrow;\n","import { useState } from 'react';\nimport LeftArrow from '../assets/fcuk-arrow-left.png';\nimport RightArrow from '../assets/fcuk-arrow-right.png';\nimport { bodyImages } from '../assets/images';\nimport { BodyImage } from '../styles';\nimport Arrow from './Arrow';\n\nconst BodyRow = () => {\n  const [bodyCount, setBodyCount] = useState<number>(1);\n\n  const onNextBodyClick = () => {\n    if (bodyCount === bodyImages.length) {\n      return setBodyCount(1);\n    }\n    setBodyCount(bodyCount + 1);\n  };\n\n  const onPreviousBodyClick = () => {\n    if (bodyCount === 1) {\n      return setBodyCount(bodyImages.length);\n    }\n    setBodyCount(bodyCount - 1);\n  };\n  return (\n    <>\n      <Arrow\n        src={LeftArrow}\n        altText={'second left arrow'}\n        row={3}\n        column={2}\n        onClick={onPreviousBodyClick}\n      />\n      {bodyImages.map((src, index) => {\n        return (\n          <BodyImage\n            key={index}\n            src={src}\n            alt={`body image ${index + 1}`}\n            shouldDisplay={index + 1 === bodyCount}\n          />\n        );\n      })}\n      <Arrow\n        src={RightArrow}\n        altText={'second right arrow'}\n        row={3}\n        column={4}\n        onClick={onNextBodyClick}\n      />\n    </>\n  );\n};\n\nexport default BodyRow;\n","import { useState } from 'react';\nimport { RandomButton, RandomButtonImage } from '../styles';\n\nconst Button = ({\n  src,\n  altText,\n}: {\n  readonly src: any;\n  readonly altText: string;\n}) => {\n  const [mouseDownOnButton, setMouseDownOnButton] = useState(false);\n  const onMouseDown = () => {\n    setMouseDownOnButton(true);\n  };\n  const onMouseUp = () => {\n    setMouseDownOnButton(false);\n  };\n  return (\n    <RandomButton\n      onMouseDown={onMouseDown}\n      onMouseUp={onMouseUp}\n      onKeyDown={onMouseDown}\n      onKeyUp={onMouseUp}\n    >\n      <RandomButtonImage\n        src={src}\n        alt={altText}\n        mouseDown={mouseDownOnButton}\n      />\n    </RandomButton>\n  );\n};\n\nexport default Button;\n","import { useState } from 'react';\nimport LeftArrow from '../assets/fcuk-arrow-left.png';\nimport RightArrow from '../assets/fcuk-arrow-right.png';\nimport { headImages } from '../assets/images';\nimport { HeadImage } from '../styles';\nimport Arrow from './Arrow';\n\nconst HeadRow = () => {\n  const [headCount, setHeadCount] = useState<number>(1);\n\n  const onNextHeadClick = () => {\n    if (headCount === headImages.length) {\n      return setHeadCount(1);\n    }\n    setHeadCount(headCount + 1);\n  };\n\n  const onPreviousHeadClick = () => {\n    if (headCount === 1) {\n      return setHeadCount(headImages.length);\n    }\n    setHeadCount(headCount - 1);\n  };\n  return (\n    <>\n      <Arrow\n        src={LeftArrow}\n        altText={'first left arrow'}\n        row={2}\n        column={2}\n        onClick={onPreviousHeadClick}\n      />\n      {headImages.map((src, index) => {\n        return (\n          <HeadImage\n            key={index}\n            src={src}\n            alt={`head image ${index + 1}`}\n            shouldDisplay={index + 1 === headCount}\n          />\n        );\n      })}\n      <Arrow\n        src={RightArrow}\n        altText={'first right arrow'}\n        row={2}\n        column={4}\n        onClick={onNextHeadClick}\n      />\n    </>\n  );\n};\n\nexport default HeadRow;\n","import { useState } from 'react';\nimport LeftArrow from '../assets/fcuk-arrow-left.png';\nimport RightArrow from '../assets/fcuk-arrow-right.png';\nimport { legsImages } from '../assets/images';\nimport { LegsImage } from '../styles';\nimport Arrow from './Arrow';\n\nconst LegsRow = () => {\n  const [legsCount, setLegsCount] = useState<number>(1);\n\n  const onNextBodyClick = () => {\n    if (legsCount === legsImages.length) {\n      return setLegsCount(1);\n    }\n    setLegsCount(legsCount + 1);\n  };\n\n  const onPreviousBodyClick = () => {\n    if (legsCount === 1) {\n      return setLegsCount(legsImages.length);\n    }\n    setLegsCount(legsCount - 1);\n  };\n  return (\n    <>\n      <Arrow\n        src={LeftArrow}\n        altText={'third left arrow'}\n        row={4}\n        column={2}\n        onClick={onPreviousBodyClick}\n      />\n      {legsImages.map((src, index) => {\n        return (\n          <LegsImage\n            key={index}\n            src={src}\n            alt={`legs image ${index + 1}`}\n            shouldDisplay={index + 1 === legsCount}\n          />\n        );\n      })}\n      <Arrow\n        src={RightArrow}\n        altText={'third right arrow'}\n        row={4}\n        column={4}\n        onClick={onNextBodyClick}\n      />\n    </>\n  );\n};\n\nexport default LegsRow;\n","import { FC } from 'react';\nimport Random from './assets/fcuk-random-button.png';\nimport Title from './assets/fcuk-title.png';\nimport BodyRow from './components/BodyRow';\nimport Button from './components/Button';\nimport HeadRow from './components/HeadRow';\nimport LegsRow from './components/LegsRow';\nimport { Container, TitleImage, Wrapper } from './styles';\n\nconst App: FC = () => {\n  return (\n    <Container>\n      <Wrapper>\n        <TitleImage src={Title} alt=\"fcuk title\" />\n        <HeadRow />\n        <BodyRow />\n        <LegsRow />\n        <Button src={Random} altText={'random button'} />\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}